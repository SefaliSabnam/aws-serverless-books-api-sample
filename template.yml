# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Stage:
    Type: String
    Description: Stage to deploy resources to
    AllowedValues:
      - staging
      - production

Conditions:
  IsProduction: !Equals [ !Ref Stage, production ]

Globals:
  Api:
    OpenApiVersion: 3.0.1 # to avoid default stage creation
  Function:
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 5
    Tracing: Active
    Tags:
      project: my-project
      environment: !Ref Stage

Resources:

  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayLoggingRole.Arn"
      
  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
        
  BooksApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "books-api-${Stage}"
      StageName: !Ref Stage
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*' # allows for logging on any resource
          HttpMethod: '*' # allows for logging on any method
      TracingEnabled: true
      Variables:
        LAMBDA_ALIAS: !Ref Stage
      Auth:
        Authorizers:
          CognitoAuth:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
  
  GetAllBooks:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Stage}-books-get-all'
      CodeUri: ./src/books/get-all/
      Handler: index.handler
      AutoPublishAlias: Live
      DeploymentPreference:
        Type: !If [IsProduction, Linear10PercentEvery1Minute, AllAtOnce]        
        Alarms:
          - !Ref GetAllBooksAliasErrorMetricGreaterThanZeroAlarm
      Environment:
        Variables:
          TABLE: !Ref BooksTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref BooksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books
            Method: get
            RestApiId:
              Ref: BooksApi
  
  CreateBook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Stage}-books-create'
      CodeUri: ./src/books/create/
      Handler: index.handler
      AutoPublishAlias: Live
      DeploymentPreference:
        Type: !If [IsProduction, Linear10PercentEvery1Minute, AllAtOnce]
        Hooks:
          PreTraffic: !Ref CreateBookPreTraffic
        Alarms:
          - !Ref CreateBookAliasErrorMetricGreaterThanZeroAlarm
      Environment:
        Variables:
          TABLE: !Ref BooksTable
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref BooksTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /books
            Method: post
            RestApiId:
              Ref: BooksApi
            Auth:
              AuthorizationScopes:
                - email
                - !If
                  - IsProduction
                  - !Ref 'AWS::NoValue'
                  - aws.cognito.signin.user.admin
              Authorizer: CognitoAuth
